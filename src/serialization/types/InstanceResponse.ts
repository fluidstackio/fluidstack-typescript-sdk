/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as FluidStackApi from "../../api/index";
import * as core from "../../core";
import { InstanceStatus } from "./InstanceStatus";
import { ConfigurationInstanceResponse } from "./ConfigurationInstanceResponse";

export const InstanceResponse: core.serialization.ObjectSchema<
    serializers.InstanceResponse.Raw,
    FluidStackApi.InstanceResponse
> = core.serialization.object({
    id: core.serialization.string(),
    status: InstanceStatus.optional(),
    username: core.serialization.string().optional(),
    sshPort: core.serialization.property("ssh_port", core.serialization.string().optional()),
    sshKeys: core.serialization.property("ssh_keys", core.serialization.list(core.serialization.string()).optional()),
    ipAddress: core.serialization.property("ip_address", core.serialization.string().optional()),
    name: core.serialization.string().optional(),
    currentRate: core.serialization.property("current_rate", core.serialization.number().optional()),
    configuration: ConfigurationInstanceResponse.optional(),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
});

export declare namespace InstanceResponse {
    interface Raw {
        id: string;
        status?: InstanceStatus.Raw | null;
        username?: string | null;
        ssh_port?: string | null;
        ssh_keys?: string[] | null;
        ip_address?: string | null;
        name?: string | null;
        current_rate?: number | null;
        configuration?: ConfigurationInstanceResponse.Raw | null;
        created_at?: string | null;
    }
}
