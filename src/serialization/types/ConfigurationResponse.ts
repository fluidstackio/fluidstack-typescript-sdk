/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as FluidStackApi from "../../api/index";
import * as core from "../../core";
import { ConfigId } from "./ConfigId";
import { GpuModelResponse } from "./GpuModelResponse";

export const ConfigurationResponse: core.serialization.ObjectSchema<
    serializers.ConfigurationResponse.Raw,
    FluidStackApi.ConfigurationResponse
> = core.serialization.object({
    id: ConfigId,
    gpuModel: core.serialization.property("gpu_model", GpuModelResponse.optional()),
    cpuModel: core.serialization.property("cpu_model", core.serialization.string().optional()),
    gpuCount: core.serialization.property("gpu_count", core.serialization.number()),
    cpuCount: core.serialization.property("cpu_count", core.serialization.number()),
    nvmeStorageSizeGb: core.serialization.property("nvme_storage_size_gb", core.serialization.number()),
    memorySizeMb: core.serialization.property("memory_size_mb", core.serialization.number()),
    estimatedProvisioningTimeMinutes: core.serialization.property(
        "estimated_provisioning_time_minutes",
        core.serialization.number().optional()
    ),
});

export declare namespace ConfigurationResponse {
    interface Raw {
        id: ConfigId.Raw;
        gpu_model?: GpuModelResponse.Raw | null;
        cpu_model?: string | null;
        gpu_count: number;
        cpu_count: number;
        nvme_storage_size_gb: number;
        memory_size_mb: number;
        estimated_provisioning_time_minutes?: number | null;
    }
}
