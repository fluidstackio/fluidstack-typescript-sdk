/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as FluidStackApi from "../../api/index";
import * as core from "../../core";
import { EntityId } from "./EntityId";
import { VolumeStatus } from "./VolumeStatus";

export const VolumeInstanceResponse: core.serialization.ObjectSchema<
    serializers.VolumeInstanceResponse.Raw,
    FluidStackApi.VolumeInstanceResponse
> = core.serialization.object({
    id: EntityId,
    name: core.serialization.string(),
    sizeGb: core.serialization.property("size_gb", core.serialization.number()),
    status: VolumeStatus.optional(),
    costGbHr: core.serialization.property("cost_gb_hr", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
});

export declare namespace VolumeInstanceResponse {
    interface Raw {
        id: EntityId.Raw;
        name: string;
        size_gb: number;
        status?: VolumeStatus.Raw | null;
        cost_gb_hr: string;
        created_at?: string | null;
        updated_at?: string | null;
    }
}
